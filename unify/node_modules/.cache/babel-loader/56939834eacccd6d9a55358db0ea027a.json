{"ast":null,"code":"var _jsxFileName = \"/Users/mollywirtz/Documents/Classes/CS 4241 - Webware/FinalProject/final-project/unify/src/Home.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Input, Container } from 'reactstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        dataField: 'title',\n        text: 'Songs in Common'\n      }],\n      songs: [{\n        id: 0,\n        title: \"song0\"\n      }, {\n        id: 1,\n        title: \"song1\"\n      }, {\n        id: 2,\n        title: \"song2\"\n      }, {\n        id: 3,\n        title: \"song3\"\n      }, {\n        id: 4,\n        title: \"song4\"\n      }, {\n        id: 5,\n        title: \"song5\"\n      }, {\n        id: 6,\n        title: \"song6\"\n      }, {\n        id: 7,\n        title: \"song7\"\n      }, {\n        id: 8,\n        title: \"song8\"\n      }, {\n        id: 9,\n        title: \"song9\"\n      }, {\n        id: 10,\n        title: \"song10\"\n      }, {\n        id: 11,\n        title: \"song11\"\n      }, {\n        id: 12,\n        title: \"song12\"\n      }, {\n        id: 13,\n        title: \"song13\"\n      }],\n      showTable: false,\n      user1: \"\",\n      user2: \"\"\n    };\n    this.getSongs = this.getSongs.bind(this);\n    this.handleUser1Change = this.handleUser1Change.bind(this);\n    this.handleUser2Change = this.handleUser2Change.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  componentDidUpdate() {// Show table when data comes in from server\n    // if (this.state.showTable) { this.renderTable }\n  } // Get form value on change\n\n\n  handleUser1Change(e) {\n    this.setState({\n      user1: e.target.value\n    });\n  }\n\n  handleUser2Change(e) {\n    this.setState({\n      user2: e.target.value\n    });\n  } // Send request to server for songs in common\n\n\n  getSongs() {\n    // FOR WHEN SERVER IS SET UP\n    // let bodyJson = [{user1: this.state.user1}, {user2: this.state.user2}]\n    // fetch('/DUMMY_PATH_TO_GET_SONGS', {\n    //     method: 'POST',\n    //     body: JSON.stringify(bodyJson),\n    //     headers: {\n    //         \"Content-Type\": \"application/json\"\n    //     }\n    // }).then(response => response.json())\n    // .then(json => {\n    //     console.log(\"SONGS FROM SERVER: \" + json)\n    //     this.setState({\n    //         songs: json,\n    //         showTable: true\n    //     })\n    // }) \n    // TEMP FOR FRONT END TESTING\n    console.log(\"set table vis\"); //this.setState({ showTable: true })\n\n    this.renderTable();\n  }\n\n  renderTable() {\n    console.log(\"render table\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 mb-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, {\n      keyField: \"id\",\n      data: this.state.songs,\n      columns: this.state.columns,\n      pagination: paginationFactory(),\n      bootstrap4: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mt-5 mb-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Application Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 mb-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"login_username else placeholder text\",\n      className: \"form-control\",\n      value: this.state.user1,\n      onChange: this.handleUser1Change,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Enter another username\",\n      className: \"form-control\",\n      value: this.state.user2,\n      onChange: this.handleUser2Change,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-primary btn-lg btn-block\",\n      onClick: this.getSongs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, \"Compare data\")))), this.renderTable);\n  }\n\n}","map":{"version":3,"sources":["/Users/mollywirtz/Documents/Classes/CS 4241 - Webware/FinalProject/final-project/unify/src/Home.js"],"names":["React","Button","Form","FormGroup","Input","Container","BootstrapTable","paginationFactory","Home","Component","constructor","props","state","columns","dataField","text","songs","id","title","showTable","user1","user2","getSongs","bind","handleUser1Change","handleUser2Change","renderTable","componentDidUpdate","e","setState","target","value","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Form, FormGroup, Input, Container } from 'reactstrap'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator'\n\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            columns: [{ dataField: 'title', text: 'Songs in Common'}],\n            songs: [{ id: 0, title: \"song0\" }, { id: 1, title: \"song1\" }, { id: 2, title: \"song2\" }, { id: 3, title: \"song3\" }, { id: 4, title: \"song4\" }, { id: 5, title: \"song5\" }, { id: 6, title: \"song6\" }, { id: 7, title: \"song7\" }, { id: 8, title: \"song8\" }, { id: 9, title: \"song9\" }, { id: 10, title: \"song10\" }, { id: 11, title: \"song11\" }, { id: 12, title: \"song12\" }, { id: 13, title: \"song13\"}],\n            showTable: false,\n            user1: \"\", \n            user2: \"\"\n        }\n\n        this.getSongs = this.getSongs.bind(this)\n        this.handleUser1Change = this.handleUser1Change.bind(this)\n        this.handleUser2Change = this.handleUser2Change.bind(this)\n        this.renderTable = this.renderTable.bind(this)\n    }\n\n    componentDidUpdate() {\n        // Show table when data comes in from server\n        // if (this.state.showTable) { this.renderTable }\n    }\n\n    // Get form value on change\n    handleUser1Change (e) { this.setState({ user1: e.target.value }) }\n    handleUser2Change (e) { this.setState({ user2: e.target.value }) }\n\n    // Send request to server for songs in common\n    getSongs() {\n        // FOR WHEN SERVER IS SET UP\n        // let bodyJson = [{user1: this.state.user1}, {user2: this.state.user2}]\n        // fetch('/DUMMY_PATH_TO_GET_SONGS', {\n        //     method: 'POST',\n        //     body: JSON.stringify(bodyJson),\n        //     headers: {\n        //         \"Content-Type\": \"application/json\"\n        //     }\n        // }).then(response => response.json())\n        // .then(json => {\n        //     console.log(\"SONGS FROM SERVER: \" + json)\n        //     this.setState({\n        //         songs: json,\n        //         showTable: true\n        //     })\n        // }) \n\n        // TEMP FOR FRONT END TESTING\n        console.log(\"set table vis\")\n        //this.setState({ showTable: true })\n        this.renderTable()\n    }\n\n    renderTable() {\n        console.log(\"render table\")\n            return (                \n            <div className=\"mt-5 mb-10\">\n                <BootstrapTable keyField='id' data={ this.state.songs } columns={ this.state.columns } pagination={ paginationFactory() } bootstrap4={true} />\n            </div>\n            )\n    }\n\n    render () {\n        return (\n            <Container>\n\n                <h1 className=\"mt-5 mb-10\">Application Name</h1>\n\n                <div className=\"mt-5 mb-10\">\n                    <Form>\n                        <FormGroup>\n                            <Input type=\"text\" placeholder=\"login_username else placeholder text\" className=\"form-control\" value={this.state.user1} onChange={this.handleUser1Change} required></Input>\n                        </FormGroup>                    \n                        <FormGroup>\n                            <Input type=\"text\" placeholder=\"Enter another username\" className=\"form-control\"  value={this.state.user2} onChange={this.handleUser2Change}  required></Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Button className=\"btn btn-primary btn-lg btn-block\" onClick={this.getSongs}>Compare data</Button>\n                        </FormGroup>\n                    </Form>\n                </div>\n\n                {this.renderTable}\n\n            </Container>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}