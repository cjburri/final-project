{"ast":null,"code":"var _jsxFileName = \"/Users/mollywirtz/Documents/Classes/CS 4241 - Webware/FinalProject/final-project/unify/src/home.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Input, Container } from 'reactstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\nimport { ChatFeed, Message } from 'react-chat-ui';\nimport * as d3 from 'd3';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      songsJSON: [],\n      user1Songs: [],\n      user2Songs: [],\n      columns: [],\n      songNames: [],\n      user1Artists: [],\n      user2Artists: [],\n      user1Albums: [],\n      user2Albums: [],\n      user1Pops: [],\n      user2Pops: [],\n      artistImages: [],\n      showTable: false,\n      user1: \"\",\n      user2: \"\",\n      staticUser1: \"\",\n      staticUser2: \"\",\n      showChat: false,\n      messages: [new Message({\n        id: 1,\n        message: \"I'm the recipient! (The person you're talking to)\"\n      }), new Message({\n        id: 0,\n        message: \"I'm you -- the blue bubble!\"\n      })],\n      overlay: false,\n      overlayStyle: \"none\",\n      typedMsg: \"\"\n    };\n    this.overlayDiv = React.createRef();\n    this.getSongs = this.getSongs.bind(this);\n    this.handleUser1Change = this.handleUser1Change.bind(this);\n    this.handleUser2Change = this.handleUser2Change.bind(this);\n    this.setChatState = this.setChatState.bind(this);\n    this.toggleOverlay = this.toggleOverlay.bind(this);\n    this.handleMessageChange = this.handleMessageChange.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.parseSongs = this.parseSongs.bind(this);\n  } // Get form value on change\n\n\n  handleUser1Change(e) {\n    this.setState({\n      user1: e.target.value\n    });\n  }\n\n  handleUser2Change(e) {\n    this.setState({\n      user2: e.target.value\n    });\n  }\n\n  handleMessageChange(e) {\n    this.setState({\n      typedMsg: e.target.value\n    });\n  } // Send request to server for songs in common\n\n\n  getSongs() {\n    // FOR WHEN SERVER IS SET UP\n    let bodyJson = {\n      user1: this.state.user1,\n      user2: this.state.user2\n    };\n    fetch('/getSongs', {\n      method: 'POST',\n      body: JSON.stringify(bodyJson),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      this.setState({\n        staticUser1: this.state.user1,\n        staticUser2: this.state.user2,\n        songsJSON: json.intersection,\n        columns: [{\n          dataField: 'title',\n          text: 'Songs'\n        }, {\n          dataField: 'artists',\n          text: 'Artist'\n        }],\n        showTable: true,\n        user1: \"\",\n        user2: \"\",\n        user1Artists: json.user1Artists,\n        user2Artists: json.user2Artists,\n        user1Albums: json.user1Albums,\n        user2Albums: json.user2Albums,\n        user1Songs: json.user1Songs,\n        user2Songs: json.user2Songs,\n        artistImages: json.artistImages\n      });\n      this.parseSongs();\n    });\n  }\n\n  parseSongs() {\n    let songNames = [];\n    let user1Pops = [];\n    let user2Pops = [];\n    console.log(this.state.artistImages[0].images[0].url);\n\n    for (let i = 0; i < this.state.songsJSON.length; i++) {\n      songNames.push({\n        id: i,\n        title: this.state.songsJSON[i].name,\n        artists: this.state.songsJSON[i].artists[0].name\n      });\n    }\n\n    for (let i = 0; i < this.state.user1Songs.length; i++) {\n      user1Pops.push({\n        popularity: this.state.user1Songs[i].popularity\n      });\n    }\n\n    for (let i = 0; i < this.state.user2Songs.length; i++) {\n      user2Pops.push({\n        popularity: this.state.user2Songs[i].popularity\n      });\n    }\n\n    this.setState({\n      songNames: songNames,\n      user1Pops: user1Pops,\n      user2Pops: user2Pops\n    });\n  }\n\n  login() {\n    fetch('/login', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(link => {\n      window.open(link['link'], '_blank');\n    });\n  }\n\n  setChatState() {\n    this.setState({\n      showChat: true\n    });\n  }\n\n  toggleOverlay() {\n    if (this.state.overlayStyle === \"block\") {\n      this.setState({\n        overlayStyle: \"none\",\n        showChat: false\n      });\n      document.body.style.overflow = \"unset\";\n    }\n  } // NEED TO WATCH LECTURES FOR THIS PART (i think)\n\n\n  sendMessage() {\n    // FOR WHEN SERVER IS SET UP\n    //let bodyJson = {id: this.state.latestId, message: this.state.typedMsg}\n    // fetch('/postMsg', {\n    //     method: 'POST',\n    //     body: JSON.stringify(bodyJson),\n    //     headers: {\n    //         \"Content-Type\": \"application/json\"\n    //     }\n    // }).then(response => response.json())\n    this.setState({\n      typedMsg: \"\"\n    });\n  }\n\n  render() {\n    // Show table on recieving data from server\n    const renderTable = () => {\n      if (this.state.showTable) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          className: \"mt-5 mb-10 user-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }\n        }, this.state.staticUser1, \" and \", this.state.staticUser2), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"mt-5 mb-10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"subtitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }\n        }, \"Songs in Common\"), /*#__PURE__*/React.createElement(BootstrapTable, {\n          headerStyle: {\n            backgroundColor: '#ffffff'\n          },\n          rowStyle: {\n            backgroundColor: '#ffffff'\n          },\n          border: true,\n          keyField: \"id\",\n          data: this.state.songNames,\n          columns: this.state.columns,\n          pagination: paginationFactory(),\n          bootstrap4: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }\n        })));\n      }\n    };\n\n    const renderChat = () => {\n      if (this.state.showChat) {\n        if (this.state.overlayStyle !== \"block\") {\n          this.setState({\n            overlayStyle: \"block\"\n          });\n          document.body.style.overflow = 'hidden';\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"chatDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Container, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          style: {\n            color: \"#191414\"\n          },\n          className: \"mt-5 mb-10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }\n        }, \"Chat\"), /*#__PURE__*/React.createElement(ChatFeed, {\n          messages: this.state.messages // Array: list of message objects\n          ,\n          isTyping: this.state.is_typing // Boolean: is the recipient typing\n          ,\n          hasInputField: false // Boolean: use our input, or use your own\n          ,\n          showSenderName: true // show the name of the user who sent the message\n          ,\n          bubblesCentered: false //Boolean should the bubbles be centered in the feed?\n          ,\n          bubbleStyles: {\n            text: {\n              fontSize: 16\n            },\n            chatbubble: {\n              borderRadius: 70,\n              padding: 10,\n              backgroundColor: '#1DB954'\n            },\n            recipientChatbubble: {\n              backgroundColor: '#191414'\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          id: \"writeMsgDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          type: \"text\",\n          placeholder: \"Type a message\",\n          style: {\n            width: \"80%\",\n            marginRight: \"20px\"\n          },\n          onChange: this.handleMessageChange,\n          value: this.state.typedMsg,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          className: \"btn btn-primary\",\n          onClick: this.sendMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }\n        }, \"Send\")));\n      }\n    };\n\n    const renderArtists = () => {\n      let group1Map = d3.rollup(this.state.user1Artists, v => v.length, d => d.name);\n      let group2Map = d3.rollup(this.state.user2Artists, v => v.length, d => d.name);\n      let artists1MapAll = d3.group(this.state.artistImages, d => d.name);\n      let group1Keys = [];\n\n      for (let [key, value] of Array.from(group1Map)) {\n        group1Keys.push(key);\n      }\n\n      let group2Keys = [];\n\n      for (let [key, value] of Array.from(group2Map)) {\n        group2Keys.push(key);\n      }\n\n      let combinedKeys = d3.intersection(group1Keys, group2Keys);\n      let groupValues = [];\n\n      for (let item of combinedKeys.values()) {\n        let sum = group1Map.get(item) + group2Map.get(item);\n        groupValues.push({\n          title: item,\n          sum: sum\n        });\n      }\n\n      groupValues.sort(function (x, y) {\n        return d3.descending(x.sum, y.sum);\n      });\n      groupValues = groupValues.slice(0, 3); // for (let i = 0 ; i < groupValues.length ; i++) {\n      //     for (let j = 0 ; j < this.state.artistImages.length; j++) {\n      //         if (this.state.artistImages[j].name == groupValues[i].title) {\n      //             groupValues[i].image = this.state.artistImages[j].images[1]\n      //             console.log(\"match \" + this.state.artistImages[j].name + \" url = \" + groupValues[i].image.url)\n      //             break\n      //         }\n      //     }\n      // }\n\n      for (let i = 0; i < groupValues.length; i++) {\n        let artist = artists1MapAll.get(groupValues[i].title);\n        console.log(artist);\n        console.log(artist[0].images); // groupValues[i].image = artist.images[1]\n        // console.log(groupValues[i].title + \" \" + groupValues[i].image)\n      } // console.log(groupValues[0].image.url)\n\n\n      if (this.state.showTable && groupValues.length > 0) {\n        console.log(groupValues[0].image.url);\n        return /*#__PURE__*/React.createElement(Container, {\n          className: \"mt-5 mb-10 statsWrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"subtitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }\n        }, \"Top Artists in Common\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"statsDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }\n        }, groupValues.map(value => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"artistName\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          alt: \"artist image\",\n          src: value.image,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 41\n          }\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"statsTitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 37\n          }\n        }, value.title)))));\n      }\n    };\n\n    const renderAlbums = () => {\n      let group1Map = d3.rollup(this.state.user1Albums, v => v.length, d => d.name);\n      let group2Map = d3.rollup(this.state.user2Albums, v => v.length, d => d.name);\n      let group1MapAll = d3.group(this.state.user1Albums, d => d.name);\n      let group1Keys = [];\n\n      for (let [key, value] of Array.from(group1Map)) {\n        group1Keys.push(key);\n      }\n\n      let group2Keys = [];\n\n      for (let [key, value] of Array.from(group2Map)) {\n        group2Keys.push(key);\n      }\n\n      let combinedKeys = d3.intersection(group1Keys, group2Keys);\n      let groupValues = [];\n\n      for (let item of combinedKeys.values()) {\n        let sum = group1Map.get(item) + group2Map.get(item);\n        groupValues.push({\n          title: item,\n          sum: sum\n        });\n      }\n\n      groupValues.sort(function (x, y) {\n        return d3.descending(x.sum, y.sum);\n      });\n      groupValues = groupValues.slice(0, 3);\n\n      for (let i = 0; i < groupValues.length; i++) {\n        let fullObj = group1MapAll.get(groupValues[i].title);\n        groupValues[i].artist = fullObj[0].artists.name;\n        groupValues[i].image = fullObj[0].images[1];\n      }\n\n      if (this.state.showTable && groupValues.length > 0) {\n        return /*#__PURE__*/React.createElement(Container, {\n          className: \"mt-5 mb-10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"subtitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 25\n          }\n        }, \"Top Albums in Common\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"statsDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }\n        }, groupValues.map(value =>\n        /*#__PURE__*/\n        // add images too \n        React.createElement(\"div\", {\n          className: \"artistName\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          alt: \"album art\",\n          src: value.image.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 41\n          }\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"statsTitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 37\n          }\n        }, value.title), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 37\n          }\n        }, value.artist)))));\n      }\n    };\n\n    const renderPopularity = () => {\n      let pop1Calc = d3.mean(this.state.user1Pops, d => d.popularity);\n      let pop2Calc = d3.mean(this.state.user2Pops, d => d.popularity);\n\n      if (pop1Calc != undefined || pop2Calc != undefined) {\n        pop1Calc = pop1Calc.toFixed(2);\n        pop2Calc = pop2Calc.toFixed(2);\n      }\n\n      if (this.state.showTable) {\n        return /*#__PURE__*/React.createElement(Container, {\n          className: \"mt-5 mb-10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"subtitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }\n        }, \"Average Song Popularity\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"statsDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"barDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fullBar\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"percentBar\",\n          style: {\n            width: `${pop1Calc}%`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 37\n          }\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"statsTitle\",\n          style: {\n            color: \"#fff\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 33\n          }\n        }, this.state.staticUser1), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: \"#fff\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 33\n          }\n        }, pop1Calc, \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"barDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fullBar\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"percentBar\",\n          style: {\n            width: `${pop2Calc}%`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 37\n          }\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"statsTitle\",\n          style: {\n            color: \"#fff\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 33\n          }\n        }, this.state.staticUser2), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: \"#fff\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 33\n          }\n        }, pop2Calc, \"%\"))));\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapperDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"overlay\",\n      onClick: this.toggleOverlay,\n      ref: \"overlayDiv\",\n      style: {\n        display: this.state.overlayStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      id: \"mainDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mt-5\",\n      style: {\n        color: \"#ffffff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }\n    }, \"Unify\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"subtitle\",\n      className: \"mb-10\",\n      style: {\n        textAlign: \"center\",\n        color: \"#ffffff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 21\n      }\n    }, \"Compare Spotify playlists!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 mb-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Enter your Spotify username\",\n      className: \"form-control\",\n      value: this.state.user1,\n      onChange: this.handleUser1Change,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Enter another Spotify username\",\n      className: \"form-control\",\n      value: this.state.user2,\n      onChange: this.handleUser2Change,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-lg btn-block\",\n      style: {\n        backgroundColor: \"#1DB954\",\n        border: \"none\",\n        outline: \"none\"\n      },\n      onClick: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 33\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-lg btn-block\",\n      style: {\n        backgroundColor: \"#1DB954\",\n        border: \"none\",\n        outline: \"none\"\n      },\n      onClick: this.getSongs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 33\n      }\n    }, \"Analyze data\")))), renderTable(), renderArtists(), renderAlbums(), renderPopularity(), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faComment,\n      className: \"fas-3x sticky-chat\",\n      onClick: this.setChatState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 21\n      }\n    })), renderChat());\n  }\n\n}","map":{"version":3,"sources":["/Users/mollywirtz/Documents/Classes/CS 4241 - Webware/FinalProject/final-project/unify/src/home.js"],"names":["React","Button","Form","FormGroup","Input","Container","BootstrapTable","paginationFactory","FontAwesomeIcon","faComment","ChatFeed","Message","d3","Home","Component","constructor","props","state","songsJSON","user1Songs","user2Songs","columns","songNames","user1Artists","user2Artists","user1Albums","user2Albums","user1Pops","user2Pops","artistImages","showTable","user1","user2","staticUser1","staticUser2","showChat","messages","id","message","overlay","overlayStyle","typedMsg","overlayDiv","createRef","getSongs","bind","handleUser1Change","handleUser2Change","setChatState","toggleOverlay","handleMessageChange","sendMessage","parseSongs","e","setState","target","value","bodyJson","fetch","method","body","JSON","stringify","headers","then","response","json","intersection","dataField","text","console","log","images","url","i","length","push","title","name","artists","popularity","login","link","window","open","document","style","overflow","render","renderTable","backgroundColor","renderChat","color","is_typing","fontSize","chatbubble","borderRadius","padding","recipientChatbubble","width","marginRight","renderArtists","group1Map","rollup","v","d","group2Map","artists1MapAll","group","group1Keys","key","Array","from","group2Keys","combinedKeys","groupValues","item","values","sum","get","sort","x","y","descending","slice","artist","image","map","height","renderAlbums","group1MapAll","fullObj","renderPopularity","pop1Calc","mean","pop2Calc","undefined","toFixed","display","textAlign","border","outline"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Form, FormGroup, Input, Container } from 'reactstrap'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\nimport { ChatFeed, Message } from 'react-chat-ui'\nimport * as d3 from 'd3'\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            songsJSON: [],\n            user1Songs: [],\n            user2Songs: [],\n            columns: [],\n            songNames: [],\n            user1Artists: [],\n            user2Artists: [],\n            user1Albums: [],\n            user2Albums: [],\n            user1Pops: [],\n            user2Pops: [],\n            artistImages: [],\n            showTable: false,\n            user1: \"\", \n            user2: \"\",\n            staticUser1: \"\", \n            staticUser2: \"\",\n            showChat: false,\n            messages: [\n                new Message({ id: 1, message: \"I'm the recipient! (The person you're talking to)\" }), \n                new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }),\n              ],\n            overlay: false,\n            overlayStyle: \"none\", \n            typedMsg: \"\",\n        }\n\n        this.overlayDiv = React.createRef()\n\n        this.getSongs = this.getSongs.bind(this)\n        this.handleUser1Change = this.handleUser1Change.bind(this)\n        this.handleUser2Change = this.handleUser2Change.bind(this)\n        this.setChatState = this.setChatState.bind(this)\n        this.toggleOverlay = this.toggleOverlay.bind(this)\n        this.handleMessageChange = this.handleMessageChange.bind(this)\n        this.sendMessage = this.sendMessage.bind(this)\n        this.parseSongs = this.parseSongs.bind(this)\n    }\n\n\n    // Get form value on change\n    handleUser1Change (e) { this.setState({ user1: e.target.value }) }\n    handleUser2Change (e) { this.setState({ user2: e.target.value }) }\n\n    handleMessageChange (e) { this.setState({ typedMsg: e.target.value }) }\n\n    // Send request to server for songs in common\n    getSongs() {\n        // FOR WHEN SERVER IS SET UP\n        let bodyJson = {user1: this.state.user1, user2: this.state.user2};\n        fetch('/getSongs', {\n            method: 'POST',\n            body: JSON.stringify(bodyJson),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => response.json()).then(json => {\n\n            this.setState({\n                staticUser1: this.state.user1, \n                staticUser2: this.state.user2, \n                songsJSON: json.intersection,\n                columns: [{ dataField: 'title', text: 'Songs'}, { dataField: 'artists', text: 'Artist'}],\n                showTable: true,\n                user1: \"\",\n                user2: \"\", \n                user1Artists: json.user1Artists, \n                user2Artists: json.user2Artists, \n                user1Albums: json.user1Albums, \n                user2Albums: json.user2Albums, \n                user1Songs: json.user1Songs,\n                user2Songs: json.user2Songs, \n                artistImages: json.artistImages\n            })\n            this.parseSongs()\n        });\n\n    }\n\n    parseSongs() {\n        let songNames = []\n        let user1Pops = []\n        let user2Pops = []\n\n        console.log(this.state.artistImages[0].images[0].url)\n\n        for (let i = 0; i < this.state.songsJSON.length; i++) {\n            songNames.push({ id: i, title: this.state.songsJSON[i].name, artists: this.state.songsJSON[i].artists[0].name })    \n        }\n\n        for (let i = 0; i < this.state.user1Songs.length; i++) {\n            user1Pops.push( { popularity: this.state.user1Songs[i].popularity } )\n        }\n\n        for (let i = 0; i < this.state.user2Songs.length; i++) {\n            user2Pops.push({ popularity: this.state.user2Songs[i].popularity })\n        }\n\n        this.setState({ \n            songNames: songNames, \n            user1Pops: user1Pops,\n            user2Pops: user2Pops \n        })\n    }\n\n    login() {\n        fetch('/login', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then((response) => response.json()).then((link) => {\n            window.open(link['link'], '_blank');\n        });\n    }\n\n    setChatState() {\n        this.setState({\n            showChat: true\n        })\n    }\n\n    toggleOverlay() {\n        if (this.state.overlayStyle === \"block\") {\n            this.setState({ \n                overlayStyle: \"none\",\n                showChat: false \n            });\n            document.body.style.overflow = \"unset\"\n        }\n    }\n\n    // NEED TO WATCH LECTURES FOR THIS PART (i think)\n    sendMessage() {\n        // FOR WHEN SERVER IS SET UP\n        //let bodyJson = {id: this.state.latestId, message: this.state.typedMsg}\n        // fetch('/postMsg', {\n        //     method: 'POST',\n        //     body: JSON.stringify(bodyJson),\n        //     headers: {\n        //         \"Content-Type\": \"application/json\"\n        //     }\n        // }).then(response => response.json())\n        this.setState({ typedMsg: \"\" })\n    }\n\n\n    render () {\n        // Show table on recieving data from server\n        const renderTable = () => {\n            if (this.state.showTable) {\n                return (   \n                    <div>    \n                        <h2 className=\"mt-5 mb-10 user-title\">{this.state.staticUser1} and {this.state.staticUser2}</h2>\n\n                        <div className=\"mt-5 mb-10\">\n                            <h4 className=\"subtitle\">Songs in Common</h4>\n                            <BootstrapTable \n                            headerStyle={{ backgroundColor: '#ffffff' }}\n                            rowStyle={{ backgroundColor: '#ffffff' }}\n                            border={true}\n                            keyField='id' data={ this.state.songNames } \n                            columns={ this.state.columns } \n                            pagination={ paginationFactory() } \n                            bootstrap4={true} />\n                        </div>\n                    </div>  \n                )\n            }\n        }\n\n        const renderChat = () => {\n            if (this.state.showChat) {\n                if (this.state.overlayStyle !== \"block\") {\n                    this.setState({ overlayStyle: \"block\" })\n                    document.body.style.overflow = 'hidden'\n                }\n\n                return (\n                    <div id=\"chatDiv\">\n                        \n                        <Container>\n                            <h1 style={{color: \"#191414\"}} className=\"mt-5 mb-10\">Chat</h1>\n                                <ChatFeed\n                                messages={this.state.messages} // Array: list of message objects\n                                isTyping={this.state.is_typing} // Boolean: is the recipient typing\n                                hasInputField={false} // Boolean: use our input, or use your own\n                                showSenderName // show the name of the user who sent the message\n                                bubblesCentered={false} //Boolean should the bubbles be centered in the feed?\n                                bubbleStyles={\n                                {\n                                    text: {\n                                        fontSize: 16\n                                    },\n                                    chatbubble: {\n                                        borderRadius: 70,\n                                        padding: 10,\n                                        backgroundColor: '#1DB954',\n                                    },\n                                    recipientChatbubble: {\n                                        backgroundColor: '#191414',\n                                    },\n                                    }\n                                }\n                                />\n                        </Container>\n\n                        <div id=\"writeMsgDiv\">\n                            <Input type=\"text\" placeholder=\"Type a message\" style={{width: \"80%\", marginRight: \"20px\"}} onChange={this.handleMessageChange} value={this.state.typedMsg} ></Input>\n                            <Button className=\"btn btn-primary\" onClick={this.sendMessage}>Send</Button>\n                        </div>\n\n                    </div>\n                    )\n            }\n        }\n\n        const renderArtists = () => {\n            let group1Map = d3.rollup(this.state.user1Artists, v => v.length, d => d.name)\n            let group2Map = d3.rollup(this.state.user2Artists, v => v.length, d => d.name)\n\n            let artists1MapAll = d3.group(this.state.artistImages, d => d.name)\n\n\n            let group1Keys = []\n            for (let [key, value] of Array.from(group1Map)) {\n                group1Keys.push(key)\n            }\n\n            let group2Keys = []\n            for (let [key, value] of Array.from(group2Map)) {\n                group2Keys.push(key)\n            }\n\n            let combinedKeys = (d3.intersection(group1Keys, group2Keys))\n\n            let groupValues = []\n            for (let item of combinedKeys.values()) {\n                let sum = group1Map.get(item) + group2Map.get(item)\n                groupValues.push({ title: item, sum: sum })\n            }\n\n            groupValues.sort(function(x, y){\n                return d3.descending(x.sum, y.sum);\n            })\n\n            groupValues = groupValues.slice(0, 3)\n            \n            // for (let i = 0 ; i < groupValues.length ; i++) {\n            //     for (let j = 0 ; j < this.state.artistImages.length; j++) {\n            //         if (this.state.artistImages[j].name == groupValues[i].title) {\n            //             groupValues[i].image = this.state.artistImages[j].images[1]\n            //             console.log(\"match \" + this.state.artistImages[j].name + \" url = \" + groupValues[i].image.url)\n            //             break\n            //         }\n            //     }\n            // }\n\n\n            for (let i = 0 ; i < groupValues.length ; i++) {\n                let artist = artists1MapAll.get(groupValues[i].title)\n                console.log(artist)\n                console.log(artist[0].images)\n                // groupValues[i].image = artist.images[1]\n                // console.log(groupValues[i].title + \" \" + groupValues[i].image)\n            }\n\n            // console.log(groupValues[0].image.url)\n\n            if (this.state.showTable && groupValues.length > 0) {\n                console.log(groupValues[0].image.url)\n\n                return (\n                    <Container className=\"mt-5 mb-10 statsWrapper\">\n                        <h4 className=\"subtitle\">Top Artists in Common</h4>\n\n                        <div className=\"statsDiv\">\n                            {groupValues.map(value => (\n                                <div className=\"artistName\">\n                                    <div>\n                                        <img style={{width: \"100%\", height: \"100%\"}} alt=\"artist image\" src={value.image}/>\n                                    </div>\n                                    <p className=\"statsTitle\">{value.title}</p>\n                                </div>\n                            ))}\n                        </div>\n                    </Container>\n                )\n            }\n        }\n\n        const renderAlbums = () => {\n            let group1Map = d3.rollup(this.state.user1Albums, v => v.length, d => d.name)\n            let group2Map = d3.rollup(this.state.user2Albums, v => v.length, d => d.name)\n\n            let group1MapAll = d3.group(this.state.user1Albums, d => d.name)\n\n            let group1Keys = []\n            for (let [key, value] of Array.from(group1Map)) {\n                group1Keys.push(key)\n            }\n\n            let group2Keys = []\n            for (let [key, value] of Array.from(group2Map)) {\n                group2Keys.push(key)\n            }\n\n            let combinedKeys = (d3.intersection(group1Keys, group2Keys))\n\n            let groupValues = []\n            for (let item of combinedKeys.values()) {\n                let sum = group1Map.get(item) + group2Map.get(item)\n                groupValues.push({ title: item, sum: sum })\n            }\n\n            groupValues.sort(function(x, y){\n                return d3.descending(x.sum, y.sum);\n            })\n\n            groupValues = groupValues.slice(0, 3)\n\n            for (let i = 0 ; i < groupValues.length ; i++) {\n                let fullObj = group1MapAll.get(groupValues[i].title)\n                groupValues[i].artist = fullObj[0].artists.name\n                groupValues[i].image = fullObj[0].images[1]\n            }\n\n            if (this.state.showTable && groupValues.length > 0) {\n                return (\n                    <Container className=\"mt-5 mb-10\">\n                        <h4 className=\"subtitle\">Top Albums in Common</h4>\n\n                        <div className=\"statsDiv\">\n                            {groupValues.map(value => (\n                                // add images too \n                                <div className=\"artistName\">\n                                    <div>\n                                        <img style={{width: \"100%\", height: \"100%\"}} alt=\"album art\" src={value.image.url}/>\n                                    </div>\n                                    <p className=\"statsTitle\">{value.title}</p>\n                                    <p>{value.artist}</p>\n                                </div>\n                            ))}\n                        </div>\n                    </Container>\n                )\n            }\n        }\n        \n        const renderPopularity = () => {\n            let pop1Calc = (d3.mean(this.state.user1Pops, d => d.popularity))\n            let pop2Calc = (d3.mean(this.state.user2Pops, d => d.popularity))\n\n            if (pop1Calc != undefined || pop2Calc != undefined) {\n                pop1Calc = pop1Calc.toFixed(2)\n                pop2Calc = pop2Calc.toFixed(2)\n            }\n\n            if (this.state.showTable) {\n                return (\n                    <Container className=\"mt-5 mb-10\">\n                        <h4 className=\"subtitle\">Average Song Popularity</h4>\n\n                        <div className=\"statsDiv\">\n                            <div className=\"barDiv\">\n                                <div className=\"fullBar\">\n                                    <div className=\"percentBar\" style={{width: `${pop1Calc}%` }}></div>\n                                </div>\n                                <p className=\"statsTitle\" style={{ color: \"#fff\" }}>{this.state.staticUser1}</p>\n                                <p style={{ color: \"#fff\" }}>{ pop1Calc }%</p>\n                            </div>\n\n                            <div className=\"barDiv\">\n                                <div className=\"fullBar\">\n                                    <div className=\"percentBar\" style={{width: `${pop2Calc}%` }}></div>\n                                </div>\n                                <p className=\"statsTitle\" style={{ color: \"#fff\" }}>{this.state.staticUser2}</p>\n                                <p style={{ color: \"#fff\" }}>{ pop2Calc }%</p>\n                            </div>\n\n                        </div> \n                    </Container>\n                )\n            }\n        }\n \n\n        return (\n            <div id=\"wrapperDiv\">\n\n                <div id=\"overlay\" onClick={this.toggleOverlay} ref=\"overlayDiv\" style={{display: this.state.overlayStyle}}></div>\n                <Container id=\"mainDiv\" >\n\n                    <h1 className=\"mt-5\" style={{color: \"#ffffff\"}}>Unify</h1>\n                    <p className=\"subtitle\" className=\"mb-10\" style={{ textAlign: \"center\", color: \"#ffffff\" }}>Compare Spotify playlists!</p>\n\n                    <div className=\"mt-5 mb-10\">\n                        <Form>\n                            <FormGroup>\n                                <Input type=\"text\" placeholder=\"Enter your Spotify username\" className=\"form-control\" value={this.state.user1} onChange={this.handleUser1Change} required></Input>\n                            </FormGroup>                    \n                            <FormGroup>\n                                <Input type=\"text\" placeholder=\"Enter another Spotify username\" className=\"form-control\"  value={this.state.user2} onChange={this.handleUser2Change}  required></Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Button className=\"btn btn-lg btn-block\" style={{backgroundColor: \"#1DB954\", border: \"none\", outline: \"none\"}} onClick={this.login}>Login</Button>\n                            </FormGroup>\n                            <FormGroup>\n                                <Button className=\"btn btn-lg btn-block\" style={{backgroundColor: \"#1DB954\", border: \"none\", outline: \"none\"}} onClick={this.getSongs}>Analyze data</Button>\n                            </FormGroup>\n                        </Form>\n                    </div>\n\n                    { renderTable() }\n\n                    { renderArtists() }\n\n                    { renderAlbums() }\n\n                    { renderPopularity() }\n\n                    <FontAwesomeIcon icon={faComment} className=\"fas-3x sticky-chat\" onClick={this.setChatState} />\n\n                </Container>\n\n                { renderChat() }\n\n            </div>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}