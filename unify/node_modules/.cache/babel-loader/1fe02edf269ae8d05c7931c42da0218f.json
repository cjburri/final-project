{"ast":null,"code":"var _jsxFileName = \"/Users/mollywirtz/Documents/Classes/CS 4241 - Webware/FinalProject/final-project/unify/src/home.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Input, Container } from 'reactstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\nimport { ChatFeed, Message } from 'react-chat-ui';\nimport * as d3 from 'd3';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      songs: [{\n        id: 0,\n        title: \"song0\"\n      }, {\n        id: 1,\n        title: \"song1\"\n      }, {\n        id: 2,\n        title: \"song2\"\n      }, {\n        id: 3,\n        title: \"song3\"\n      }, {\n        id: 4,\n        title: \"song4\"\n      }, {\n        id: 5,\n        title: \"song5\"\n      }, {\n        id: 6,\n        title: \"song6\"\n      }, {\n        id: 7,\n        title: \"song7\"\n      }, {\n        id: 8,\n        title: \"song8\"\n      }, {\n        id: 9,\n        title: \"song9\"\n      }, {\n        id: 10,\n        title: \"song10\"\n      }, {\n        id: 11,\n        title: \"song11\"\n      }, {\n        id: 12,\n        title: \"song12\"\n      }, {\n        id: 13,\n        title: \"song13\"\n      }],\n      columns: [],\n      //songs: [],\n      showTable: false,\n      user1: \"\",\n      user2: \"\",\n      staticUser1: \"\",\n      staticUser2: \"\",\n      showChat: false,\n      messages: [new Message({\n        id: 1,\n        message: \"I'm the recipient! (The person you're talking to)\"\n      }), new Message({\n        id: 0,\n        message: \"I'm you -- the blue bubble!\"\n      })],\n      overlay: false,\n      overlayStyle: \"none\",\n      typedMsg: \"\",\n      testArtistsA: [{\n        name: \"aaa\"\n      }, {\n        name: \"bbb\"\n      }, {\n        name: \"ccc\"\n      }, {\n        name: \"ddd\"\n      }, {\n        name: \"eee\"\n      }, {\n        name: \"ddd\"\n      }, {\n        name: \"eee\"\n      }, {\n        name: \"ddd\"\n      }, {\n        name: \"eee\"\n      }],\n      testArtistsB: [{\n        name: \"bbb\"\n      }, {\n        name: \"fff\"\n      }, {\n        name: \"ccc\"\n      }, {\n        name: \"aaa\"\n      }, {\n        name: \"ggg\"\n      }, {\n        name: \"fff\"\n      }, {\n        name: \"ccc\"\n      }, {\n        name: \"aaa\"\n      }, {\n        name: \"ggg\"\n      }],\n      testPopularityA: [{\n        popularity: 0\n      }, {\n        popularity: 93\n      }, {\n        popularity: 45\n      }, {\n        popularity: 17\n      }, {\n        popularity: 56\n      }, {\n        popularity: 90\n      }, {\n        popularity: 3\n      }, {\n        popularity: 82\n      }],\n      testPopularityB: [{\n        popularity: 55\n      }, {\n        popularity: 23\n      }, {\n        popularity: 48\n      }, {\n        popularity: 47\n      }, {\n        popularity: 58\n      }, {\n        popularity: 90\n      }, {\n        popularity: 32\n      }, {\n        popularity: 12\n      }]\n    };\n    this.overlayDiv = React.createRef();\n    this.getSongs = this.getSongs.bind(this);\n    this.handleUser1Change = this.handleUser1Change.bind(this);\n    this.handleUser2Change = this.handleUser2Change.bind(this);\n    this.setChatState = this.setChatState.bind(this);\n    this.toggleOverlay = this.toggleOverlay.bind(this);\n    this.handleMessageChange = this.handleMessageChange.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n  } // Get form value on change\n\n\n  handleUser1Change(e) {\n    this.setState({\n      user1: e.target.value\n    });\n  }\n\n  handleUser2Change(e) {\n    this.setState({\n      user2: e.target.value\n    });\n  }\n\n  handleMessageChange(e) {\n    this.setState({\n      typedMsg: e.target.value\n    });\n  } // Send request to server for songs in common\n\n\n  getSongs() {\n    // FOR WHEN SERVER IS SET UP\n    // let bodyJson = {user1: this.state.user1, user2: this.state.user2}\n    // fetch('/getSongs', {\n    //     method: 'POST',\n    //     body: JSON.stringify(bodyJson),\n    //     headers: {\n    //         \"Content-Type\": \"application/json\"\n    //     }\n    // }).then(response => response.json())\n    // .then(json => {\n    //     console.log(\"SONGS FROM SERVER: \" + json)\n    //     let staticUser1 = this.state.user1\n    //     let staticUser2 = this.state.user2\n    //     this.setState({\n    //         songs: json,\n    //         columns: [{ dataField: 'title', text: `Songs in Common Between ${staticUser1} and ${staticUser2}`}],\n    //         showTable: true,\n    //          staticUser1: this.state.user1,\n    //          staticUser2: this.state.user2,\n    //         user1: \"\",\n    //         user2: \"\"\n    //     })\n    // }) \n    // TEMP FOR FRONT END TESTING\n    this.setState({\n      showTable: true,\n      columns: [{\n        dataField: 'title',\n        text: ``,\n        headerStyle: {\n          backgroundColor: \"#ffffff\"\n        }\n      }],\n      staticUser1: this.state.user1,\n      staticUser2: this.state.user2,\n      user1: \"\",\n      user2: \"\"\n    });\n  }\n\n  setChatState() {\n    this.setState({\n      showChat: true\n    });\n  }\n\n  toggleOverlay() {\n    if (this.state.overlayStyle === \"block\") {\n      this.setState({\n        overlayStyle: \"none\",\n        showChat: false\n      });\n      document.body.style.overflow = \"unset\";\n    }\n  } // NEED TO WATCH LECTURES FOR THIS PART (i think)\n\n\n  sendMessage() {\n    // FOR WHEN SERVER IS SET UP\n    //let bodyJson = {id: this.state.latestId, message: this.state.typedMsg}\n    // fetch('/postMsg', {\n    //     method: 'POST',\n    //     body: JSON.stringify(bodyJson),\n    //     headers: {\n    //         \"Content-Type\": \"application/json\"\n    //     }\n    // }).then(response => response.json())\n    this.setState({\n      typedMsg: \"\"\n    });\n  }\n\n  render() {\n    // Show table on recieving data from server\n    const renderTable = () => {\n      if (this.state.showTable) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          className: \"mt-5 mb-10 user-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }\n        }, this.state.staticUser1, \" and \", this.state.staticUser2), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"mt-5 mb-10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"subtitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }\n        }, \"Songs in Common\"), /*#__PURE__*/React.createElement(BootstrapTable, {\n          rowStyle: {\n            backgroundColor: '#ffffff'\n          },\n          border: true,\n          keyField: \"id\",\n          data: this.state.songs,\n          columns: this.state.columns,\n          pagination: paginationFactory(),\n          bootstrap4: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }\n        })));\n      }\n    };\n\n    const renderChat = () => {\n      if (this.state.showChat) {\n        if (this.state.overlayStyle !== \"block\") {\n          this.setState({\n            overlayStyle: \"block\"\n          });\n          document.body.style.overflow = 'hidden';\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"chatDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Container, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          style: {\n            color: \"#191414\"\n          },\n          className: \"mt-5 mb-10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }\n        }, \"Chat\"), /*#__PURE__*/React.createElement(ChatFeed, {\n          messages: this.state.messages // Array: list of message objects\n          ,\n          isTyping: this.state.is_typing // Boolean: is the recipient typing\n          ,\n          hasInputField: false // Boolean: use our input, or use your own\n          ,\n          showSenderName: true // show the name of the user who sent the message\n          ,\n          bubblesCentered: false //Boolean should the bubbles be centered in the feed?\n          ,\n          bubbleStyles: {\n            text: {\n              fontSize: 16\n            },\n            chatbubble: {\n              borderRadius: 70,\n              padding: 10,\n              backgroundColor: '#1DB954'\n            },\n            recipientChatbubble: {\n              backgroundColor: '#191414'\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          id: \"writeMsgDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          type: \"text\",\n          placeholder: \"Type a message\",\n          style: {\n            width: \"80%\",\n            marginRight: \"20px\"\n          },\n          onChange: this.handleMessageChange,\n          value: this.state.typedMsg,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          className: \"btn btn-primary\",\n          onClick: this.sendMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }\n        }, \"Send\")));\n      }\n    };\n\n    const renderArtists = () => {\n      let group1Map = d3.rollup(this.state.testArtistsA, v => v.length, d => d.name);\n      let group2Map = d3.rollup(this.state.testArtistsB, v => v.length, d => d.name);\n      let group1Keys = [];\n\n      for (let [key, value] of Array.from(group1Map)) {\n        group1Keys.push(key);\n      }\n\n      let group2Keys = [];\n\n      for (let [key, value] of Array.from(group2Map)) {\n        group2Keys.push(key);\n      }\n\n      let combinedKeys = d3.intersection(group1Keys, group2Keys);\n      let groupValues = [];\n\n      for (let item of combinedKeys.values()) {\n        let sum = group1Map.get(item) + group2Map.get(item);\n        groupValues.push({\n          title: item,\n          sum: sum\n        });\n      }\n\n      groupValues.sort(function (x, y) {\n        return d3.descending(x.sum, y.sum);\n      });\n\n      if (this.state.showTable) {\n        return /*#__PURE__*/React.createElement(Container, {\n          className: \"mt-5 mb-10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"subtitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }\n        }, \"Top Artists in Common\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"artistDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }\n        }, groupValues.map(value =>\n        /*#__PURE__*/\n        // add images too \n        React.createElement(\"div\", {\n          className: \"artistName\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 33\n          }\n        }, value.title))));\n      }\n    };\n\n    const renderPopularity = () => {\n      let pop1Calc = d3.mean(this.state.testPopularityA, d => d.popularity);\n      let pop2Calc = d3.mean(this.state.testPopularityB, d => d.popularity); // var width = 450\n      //     height = 450\n      //     margin = 40\n      // var radius = Math.min(width, height) / 2 - margin\n      // // append the svg object to the div called 'my_dataviz'\n      // var svg = d3.select(\"#pop1\")\n      // .append(\"svg\")\n      //     .attr(\"width\", width)\n      //     .attr(\"height\", height)\n      // .append(\"g\")\n      //     .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n      // // Create dummy data\n      // let data1 = {a: pop1Calc, b: 100 - pop1Calc}\n      // let data2 = {a: pop2Calc, b: 100 - pop2Calc}\n      // // set the color scale\n      // var color = d3.scaleOrdinal()\n      // .domain(data1)\n      // .range([\"#98abc5\", \"#8a89a6\"])\n      // // Compute the position of each group on the pie:\n      // var pie = d3.pie()\n      // .value(function(d) {return d.value; })\n      // var data_ready = pie(d3.entries(data1))\n      // // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n      // svg\n      // .selectAll('whatever')\n      // .data(data_ready)\n      // .enter()\n      // .append('path')\n      // .attr('d', d3.arc()\n      //     .innerRadius(0)\n      //     .outerRadius(radius)\n      // )\n      // .attr('fill', function(d){ return(color(d.data1.key)) })\n      // .attr(\"stroke\", \"black\")\n      // .style(\"stroke-width\", \"2px\")\n      // .style(\"opacity\", 0.7)\n      // set the dimensions and margins of the graph\n\n      var width = 450;\n      height = 450;\n      margin = 40; // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n\n      var radius = Math.min(width, height) / 2 - margin; // append the svg object to the div called 'my_dataviz'\n\n      var svg = d3.select(\"#pop1\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\"); // Create dummy data\n\n      var data = {\n        a: 9,\n        b: 20,\n        c: 30,\n        d: 8,\n        e: 12\n      }; // set the color scale\n\n      var color = d3.scaleOrdinal().domain(data).range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\"]); // Compute the position of each group on the pie:\n\n      var pie = d3.pie().value(function (d) {\n        return d.value;\n      });\n      var data_ready = pie(d3.entries(data)); // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n\n      svg.selectAll('whatever').data(data_ready).enter().append('path').attr('d', d3.arc().innerRadius(100) // This is the size of the donut hole\n      .outerRadius(radius)).attr('fill', function (d) {\n        return color(d.data.key);\n      }).attr(\"stroke\", \"black\").style(\"stroke-width\", \"2px\").style(\"opacity\", 0.7);\n\n      if (this.state.showTable) {\n        return /*#__PURE__*/React.createElement(Container, {\n          className: \"mt-5 mb-10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"subtitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }\n        }, \"Average Popularity\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"artistDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          id: \"pop1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"artistName\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 29\n          }\n        }, pop1Calc), /*#__PURE__*/React.createElement(\"div\", {\n          id: \"pop2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"artistName\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 29\n          }\n        }, pop2Calc)));\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapperDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"overlay\",\n      onClick: this.toggleOverlay,\n      ref: \"overlayDiv\",\n      style: {\n        display: this.state.overlayStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      id: \"mainDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mt-5 mb-10\",\n      style: {\n        color: \"#ffffff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }, \"Unify\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 mb-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"login_username else placeholder text\",\n      className: \"form-control\",\n      value: this.state.user1,\n      onChange: this.handleUser1Change,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Enter another username\",\n      className: \"form-control\",\n      value: this.state.user2,\n      onChange: this.handleUser2Change,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-lg btn-block\",\n      style: {\n        backgroundColor: \"#1DB954\",\n        border: \"none\",\n        outline: \"none\"\n      },\n      onClick: this.getSongs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 33\n      }\n    }, \"Compare data\")))), renderTable(), renderArtists(), renderPopularity(), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faComment,\n      className: \"fas-3x sticky-chat\",\n      onClick: this.setChatState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }\n    })), renderChat());\n  }\n\n}","map":{"version":3,"sources":["/Users/mollywirtz/Documents/Classes/CS 4241 - Webware/FinalProject/final-project/unify/src/home.js"],"names":["React","Button","Form","FormGroup","Input","Container","BootstrapTable","paginationFactory","FontAwesomeIcon","faComment","ChatFeed","Message","d3","Home","Component","constructor","props","state","songs","id","title","columns","showTable","user1","user2","staticUser1","staticUser2","showChat","messages","message","overlay","overlayStyle","typedMsg","testArtistsA","name","testArtistsB","testPopularityA","popularity","testPopularityB","overlayDiv","createRef","getSongs","bind","handleUser1Change","handleUser2Change","setChatState","toggleOverlay","handleMessageChange","sendMessage","e","setState","target","value","dataField","text","headerStyle","backgroundColor","document","body","style","overflow","render","renderTable","renderChat","color","is_typing","fontSize","chatbubble","borderRadius","padding","recipientChatbubble","width","marginRight","renderArtists","group1Map","rollup","v","length","d","group2Map","group1Keys","key","Array","from","push","group2Keys","combinedKeys","intersection","groupValues","item","values","sum","get","sort","x","y","descending","map","renderPopularity","pop1Calc","mean","pop2Calc","height","margin","radius","Math","min","svg","select","append","attr","data","a","b","c","scaleOrdinal","domain","range","pie","data_ready","entries","selectAll","enter","arc","innerRadius","outerRadius","display","border","outline"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Form, FormGroup, Input, Container } from 'reactstrap'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\nimport { ChatFeed, Message } from 'react-chat-ui'\nimport * as d3 from 'd3'\n\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            songs: [{ id: 0, title: \"song0\" }, { id: 1, title: \"song1\" }, { id: 2, title: \"song2\" }, { id: 3, title: \"song3\" }, { id: 4, title: \"song4\" }, { id: 5, title: \"song5\" }, { id: 6, title: \"song6\" }, { id: 7, title: \"song7\" }, { id: 8, title: \"song8\" }, { id: 9, title: \"song9\" }, { id: 10, title: \"song10\" }, { id: 11, title: \"song11\" }, { id: 12, title: \"song12\" }, { id: 13, title: \"song13\"}],\n            columns: [],\n            //songs: [],\n            showTable: false,\n            user1: \"\", \n            user2: \"\",\n            staticUser1: \"\", \n            staticUser2: \"\",\n            showChat: false,\n            messages: [\n                new Message({ id: 1, message: \"I'm the recipient! (The person you're talking to)\" }), \n                new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }),\n              ],\n            overlay: false,\n            overlayStyle: \"none\", \n            typedMsg: \"\",\n            testArtistsA: [{name: \"aaa\"}, {name: \"bbb\"}, {name: \"ccc\"}, {name: \"ddd\"}, {name: \"eee\"}, {name: \"ddd\"}, {name: \"eee\"}, {name: \"ddd\"}, {name: \"eee\"}],\n            testArtistsB: [{name: \"bbb\"}, {name: \"fff\"}, {name: \"ccc\"}, {name: \"aaa\"}, {name: \"ggg\"}, {name: \"fff\"}, {name: \"ccc\"}, {name: \"aaa\"}, {name: \"ggg\"}], \n            testPopularityA: [{popularity: 0}, {popularity: 93}, {popularity: 45}, {popularity: 17}, {popularity: 56}, {popularity: 90}, {popularity: 3}, {popularity: 82}], \n            testPopularityB: [{popularity: 55}, {popularity: 23}, {popularity: 48}, {popularity: 47}, {popularity: 58}, {popularity: 90}, {popularity: 32}, {popularity: 12}]\n        }\n\n        this.overlayDiv = React.createRef()\n\n        this.getSongs = this.getSongs.bind(this)\n        this.handleUser1Change = this.handleUser1Change.bind(this)\n        this.handleUser2Change = this.handleUser2Change.bind(this)\n        this.setChatState = this.setChatState.bind(this)\n        this.toggleOverlay = this.toggleOverlay.bind(this)\n        this.handleMessageChange = this.handleMessageChange.bind(this)\n        this.sendMessage = this.sendMessage.bind(this)\n    }\n\n\n    // Get form value on change\n    handleUser1Change (e) { this.setState({ user1: e.target.value }) }\n    handleUser2Change (e) { this.setState({ user2: e.target.value }) }\n\n    handleMessageChange (e) { this.setState({ typedMsg: e.target.value }) }\n\n    // Send request to server for songs in common\n    getSongs() {\n        // FOR WHEN SERVER IS SET UP\n        // let bodyJson = {user1: this.state.user1, user2: this.state.user2}\n        // fetch('/getSongs', {\n        //     method: 'POST',\n        //     body: JSON.stringify(bodyJson),\n        //     headers: {\n        //         \"Content-Type\": \"application/json\"\n        //     }\n        // }).then(response => response.json())\n        // .then(json => {\n        //     console.log(\"SONGS FROM SERVER: \" + json)\n        //     let staticUser1 = this.state.user1\n        //     let staticUser2 = this.state.user2\n        //     this.setState({\n        //         songs: json,\n        //         columns: [{ dataField: 'title', text: `Songs in Common Between ${staticUser1} and ${staticUser2}`}],\n        //         showTable: true,\n        //          staticUser1: this.state.user1,\n        //          staticUser2: this.state.user2,\n        //         user1: \"\",\n        //         user2: \"\"\n        //     })\n        // }) \n\n        // TEMP FOR FRONT END TESTING\n        this.setState({ \n            showTable: true,\n            columns: [\n                { dataField: 'title', text: ``, \n                headerStyle: { backgroundColor: \"#ffffff\"}\n            }\n            ],\n            staticUser1: this.state.user1,\n            staticUser2: this.state.user2,\n            user1: \"\",\n            user2: \"\"\n        })\n        \n    }\n\n    setChatState() {\n        this.setState({\n            showChat: true\n        })\n    }\n\n    toggleOverlay() {\n        if (this.state.overlayStyle === \"block\") {\n            this.setState({ \n                overlayStyle: \"none\",\n                showChat: false \n            })\n            document.body.style.overflow = \"unset\"\n        }\n    }\n\n    // NEED TO WATCH LECTURES FOR THIS PART (i think)\n    sendMessage() {\n        // FOR WHEN SERVER IS SET UP\n        //let bodyJson = {id: this.state.latestId, message: this.state.typedMsg}\n        // fetch('/postMsg', {\n        //     method: 'POST',\n        //     body: JSON.stringify(bodyJson),\n        //     headers: {\n        //         \"Content-Type\": \"application/json\"\n        //     }\n        // }).then(response => response.json())\n        this.setState({ typedMsg: \"\" })\n    }\n\n\n    render () {\n        // Show table on recieving data from server\n        const renderTable = () => {\n            if (this.state.showTable) {\n                return (   \n                    <div>    \n                        <h2 className=\"mt-5 mb-10 user-title\">{this.state.staticUser1} and {this.state.staticUser2}</h2>\n\n                        <div className=\"mt-5 mb-10\">\n                            <h4 className=\"subtitle\">Songs in Common</h4>\n                            <BootstrapTable \n                            rowStyle={{ backgroundColor: '#ffffff' }}\n                            \n                            border={true}\n                            keyField='id' data={ this.state.songs } \n                            columns={ this.state.columns } \n                            pagination={ paginationFactory() } \n                            bootstrap4={true} />\n                        </div>\n                    </div>  \n                )\n            }\n        }\n\n        const renderChat = () => {\n            if (this.state.showChat) {\n                if (this.state.overlayStyle !== \"block\") {\n                    this.setState({ overlayStyle: \"block\" })\n                    document.body.style.overflow = 'hidden'\n                }\n\n                return (\n                    <div id=\"chatDiv\">\n                        \n                        <Container>\n                            <h1 style={{color: \"#191414\"}} className=\"mt-5 mb-10\">Chat</h1>\n                                <ChatFeed\n                                messages={this.state.messages} // Array: list of message objects\n                                isTyping={this.state.is_typing} // Boolean: is the recipient typing\n                                hasInputField={false} // Boolean: use our input, or use your own\n                                showSenderName // show the name of the user who sent the message\n                                bubblesCentered={false} //Boolean should the bubbles be centered in the feed?\n                                bubbleStyles={\n                                {\n                                    text: {\n                                        fontSize: 16\n                                    },\n                                    chatbubble: {\n                                        borderRadius: 70,\n                                        padding: 10,\n                                        backgroundColor: '#1DB954',\n                                    },\n                                    recipientChatbubble: {\n                                        backgroundColor: '#191414',\n                                    },\n                                    }\n                                }\n                                />\n                        </Container>\n\n                        <div id=\"writeMsgDiv\">\n                            <Input type=\"text\" placeholder=\"Type a message\" style={{width: \"80%\", marginRight: \"20px\"}} onChange={this.handleMessageChange} value={this.state.typedMsg} ></Input>\n                            <Button className=\"btn btn-primary\" onClick={this.sendMessage}>Send</Button>\n                        </div>\n\n                    </div>\n                    )\n            }\n        }\n\n        const renderArtists = () => {\n            let group1Map = d3.rollup(this.state.testArtistsA, v => v.length, d => d.name)\n            let group2Map = d3.rollup(this.state.testArtistsB, v => v.length, d => d.name)\n\n            let group1Keys = []\n            for (let [key, value] of Array.from(group1Map)) {\n                group1Keys.push(key)\n            }\n\n            let group2Keys = []\n            for (let [key, value] of Array.from(group2Map)) {\n                group2Keys.push(key)\n            }\n\n            let combinedKeys = (d3.intersection(group1Keys, group2Keys))\n\n            let groupValues = []\n            for (let item of combinedKeys.values()) {\n                let sum = group1Map.get(item) + group2Map.get(item)\n                groupValues.push({ title: item, sum: sum})\n            }\n\n            groupValues.sort(function(x, y){\n                return d3.descending(x.sum, y.sum);\n            })\n\n            if (this.state.showTable) {\n                return (\n                    <Container className=\"mt-5 mb-10\">\n                        <h4 className=\"subtitle\">Top Artists in Common</h4>\n\n                        <div className=\"artistDiv\">\n                            {groupValues.map(value => (\n                                // add images too \n                                <div className=\"artistName\">{value.title}</div>\n                            ))}\n                        </div>\n                    </Container>\n                )\n            }\n        }\n        \n        const renderPopularity = () => {\n            let pop1Calc = d3.mean(this.state.testPopularityA, d => d.popularity)\n            let pop2Calc = d3.mean(this.state.testPopularityB, d => d.popularity)\n\n            // var width = 450\n            //     height = 450\n            //     margin = 40\n\n            // var radius = Math.min(width, height) / 2 - margin\n\n            // // append the svg object to the div called 'my_dataviz'\n            // var svg = d3.select(\"#pop1\")\n            // .append(\"svg\")\n            //     .attr(\"width\", width)\n            //     .attr(\"height\", height)\n            // .append(\"g\")\n            //     .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n            // // Create dummy data\n            // let data1 = {a: pop1Calc, b: 100 - pop1Calc}\n            // let data2 = {a: pop2Calc, b: 100 - pop2Calc}\n\n            // // set the color scale\n            // var color = d3.scaleOrdinal()\n            // .domain(data1)\n            // .range([\"#98abc5\", \"#8a89a6\"])\n\n            // // Compute the position of each group on the pie:\n            // var pie = d3.pie()\n            // .value(function(d) {return d.value; })\n            // var data_ready = pie(d3.entries(data1))\n\n            // // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n            // svg\n            // .selectAll('whatever')\n            // .data(data_ready)\n            // .enter()\n            // .append('path')\n            // .attr('d', d3.arc()\n            //     .innerRadius(0)\n            //     .outerRadius(radius)\n            // )\n            // .attr('fill', function(d){ return(color(d.data1.key)) })\n            // .attr(\"stroke\", \"black\")\n            // .style(\"stroke-width\", \"2px\")\n            // .style(\"opacity\", 0.7)\n\n\n\n            // set the dimensions and margins of the graph\n            var width = 450\n                height = 450\n                margin = 40\n\n            // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n            var radius = Math.min(width, height) / 2 - margin\n\n            // append the svg object to the div called 'my_dataviz'\n            var svg = d3.select(\"#pop1\")\n            .append(\"svg\")\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n            .append(\"g\")\n                .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n            // Create dummy data\n            var data = {a: 9, b: 20, c:30, d:8, e:12}\n\n            // set the color scale\n            var color = d3.scaleOrdinal()\n            .domain(data)\n            .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\"])\n\n            // Compute the position of each group on the pie:\n            var pie = d3.pie()\n            .value(function(d) {return d.value; })\n            var data_ready = pie(d3.entries(data))\n\n            // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n            svg\n            .selectAll('whatever')\n            .data(data_ready)\n            .enter()\n            .append('path')\n            .attr('d', d3.arc()\n                .innerRadius(100)         // This is the size of the donut hole\n                .outerRadius(radius)\n            )\n            .attr('fill', function(d){ return(color(d.data.key)) })\n            .attr(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"2px\")\n            .style(\"opacity\", 0.7)\n\n\n\n\n\n\n\n\n\n\n            \n\n\n            if (this.state.showTable) {\n                return (\n                    <Container className=\"mt-5 mb-10\">\n                        <h4 className=\"subtitle\">Average Popularity</h4>\n\n                        <div className=\"artistDiv\">\n                            <div id=\"pop1\"></div>\n                            <div className=\"artistName\">{ pop1Calc }</div>\n                            <div id=\"pop2\"></div>\n                            <div className=\"artistName\">{ pop2Calc }</div>\n                        </div> \n                    </Container>\n                )\n            }\n        }\n \n\n        return (\n            <div id=\"wrapperDiv\">\n\n                <div id=\"overlay\" onClick={this.toggleOverlay} ref=\"overlayDiv\" style={{display: this.state.overlayStyle}}></div>\n                <Container id=\"mainDiv\" >\n\n                    <h1 className=\"mt-5 mb-10\" style={{color: \"#ffffff\"}}>Unify</h1>\n\n                    <div className=\"mt-5 mb-10\">\n                        <Form>\n                            <FormGroup>\n                                <Input type=\"text\" placeholder=\"login_username else placeholder text\" className=\"form-control\" value={this.state.user1} onChange={this.handleUser1Change} required></Input>\n                            </FormGroup>                    \n                            <FormGroup>\n                                <Input type=\"text\" placeholder=\"Enter another username\" className=\"form-control\"  value={this.state.user2} onChange={this.handleUser2Change}  required></Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Button className=\"btn btn-lg btn-block\" style={{backgroundColor: \"#1DB954\", border: \"none\", outline: \"none\"}} onClick={this.getSongs}>Compare data</Button>\n                            </FormGroup>\n                        </Form>\n                    </div>\n\n                    { renderTable() }\n\n                    { renderArtists() }\n\n                    { renderPopularity() }\n\n                    <FontAwesomeIcon icon={faComment} className=\"fas-3x sticky-chat\" onClick={this.setChatState} />\n\n                </Container>\n\n                { renderChat() }\n\n            </div>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}