{"ast":null,"code":"var _jsxFileName = \"/Users/mollywirtz/Documents/Classes/CS 4241 - Webware/FinalProject/final-project/unify/src/Home.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Input, Container } from 'reactstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments } from '@fortawesome/free-solid-svg-icons';\nimport { ChatFeed, Message } from 'react-chat-ui';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // columns: [{ dataField: 'title', text: 'Songs in Common'}],\n      songs: [{\n        id: 0,\n        title: \"song0\"\n      }, {\n        id: 1,\n        title: \"song1\"\n      }, {\n        id: 2,\n        title: \"song2\"\n      }, {\n        id: 3,\n        title: \"song3\"\n      }, {\n        id: 4,\n        title: \"song4\"\n      }, {\n        id: 5,\n        title: \"song5\"\n      }, {\n        id: 6,\n        title: \"song6\"\n      }, {\n        id: 7,\n        title: \"song7\"\n      }, {\n        id: 8,\n        title: \"song8\"\n      }, {\n        id: 9,\n        title: \"song9\"\n      }, {\n        id: 10,\n        title: \"song10\"\n      }, {\n        id: 11,\n        title: \"song11\"\n      }, {\n        id: 12,\n        title: \"song12\"\n      }, {\n        id: 13,\n        title: \"song13\"\n      }],\n      columns: [],\n      //songs: [],\n      showTable: false,\n      user1: \"\",\n      user2: \"\",\n      showChat: false,\n      messages: [new Message({\n        id: 1,\n        message: \"I'm the recipient! (The person you're talking to)\"\n      }), // Gray bubble\n      new Message({\n        id: 0,\n        message: \"I'm you -- the blue bubble!\"\n      }) // Blue bubble\n      ],\n      overlay: false,\n      overlayStyle: \"none\"\n    };\n    this.overlayDiv = React.createRef();\n    this.getSongs = this.getSongs.bind(this);\n    this.handleUser1Change = this.handleUser1Change.bind(this);\n    this.handleUser2Change = this.handleUser2Change.bind(this);\n    this.setChatState = this.setChatState.bind(this);\n    this.toggleOverlay = this.toggleOverlay.bind(this);\n  } // Get form value on change\n\n\n  handleUser1Change(e) {\n    this.setState({\n      user1: e.target.value\n    });\n  }\n\n  handleUser2Change(e) {\n    this.setState({\n      user2: e.target.value\n    });\n  } // Send request to server for songs in common\n\n\n  getSongs() {\n    // FOR WHEN SERVER IS SET UP\n    // let bodyJson = [{user1: this.state.user1}, {user2: this.state.user2}]\n    // fetch('/DUMMY_PATH_TO_GET_SONGS', {\n    //     method: 'POST',\n    //     body: JSON.stringify(bodyJson),\n    //     headers: {\n    //         \"Content-Type\": \"application/json\"\n    //     }\n    // }).then(response => response.json())\n    // .then(json => {\n    //     console.log(\"SONGS FROM SERVER: \" + json)\n    //     let staticUser1 = this.state.user1\n    //     let staticUser2 = this.state.user2\n    //     this.setState({\n    //         songs: json,\n    //         columns: [{ dataField: 'title', text: `Songs in Common Between ${staticUser1} and ${staticUser2}`}],\n    //         showTable: true,\n    //         user1: \"\",\n    //         user2: \"\"\n    //     })\n    // }) \n    // TEMP FOR FRONT END TESTING\n    let staticUser1 = this.state.user1;\n    let staticUser2 = this.state.user2;\n    this.setState({\n      showTable: true,\n      columns: [{\n        dataField: 'title',\n        text: `Songs in Common Between ${staticUser1} and ${staticUser2}`\n      }],\n      user1: \"\",\n      user2: \"\"\n    });\n  }\n\n  setChatState() {\n    this.setState({\n      showChat: true\n    });\n  }\n\n  toggleOverlay() {\n    if (this.state.overlayStyle === \"block\") {\n      this.setState({\n        overlayStyle: \"none\",\n        showChat: false\n      });\n    }\n  }\n\n  render() {\n    // Show table on recieving data from server\n    const renderTable = () => {\n      if (this.state.showTable) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"mt-5 mb-10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(BootstrapTable, {\n          keyField: \"id\",\n          data: this.state.songs,\n          columns: this.state.columns,\n          pagination: paginationFactory(),\n          bootstrap4: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }\n        }));\n      }\n    };\n\n    const renderChat = () => {\n      if (this.state.showChat) {\n        if (this.state.overlayStyle !== \"block\") {\n          this.setState({\n            overlayStyle: \"block\"\n          });\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Container, {\n          id: \"chatDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          style: {\n            color: \"#ffffff\"\n          },\n          className: \"mt-5 mb-10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }\n        }, \"Chat\"), /*#__PURE__*/React.createElement(ChatFeed, {\n          messages: this.state.messages // Array: list of message objects\n          ,\n          isTyping: this.state.is_typing // Boolean: is the recipient typing\n          ,\n          hasInputField: false // Boolean: use our input, or use your own\n          ,\n          showSenderName: true // show the name of the user who sent the message\n          ,\n          bubblesCentered: false //Boolean should the bubbles be centered in the feed?\n          ,\n          bubbleStyles: {\n            text: {\n              fontSize: 16\n            },\n            chatbubble: {\n              borderRadius: 70,\n              padding: 10\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          id: \"writeMsgDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          type: \"text\",\n          placeholder: \"Type a message\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(Button, {\n          className: \"btn btn-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }\n        }, \"Send\")));\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapperDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"overlay\",\n      onClick: this.toggleOverlay,\n      ref: \"overlayDiv\",\n      style: {\n        display: this.state.overlayStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      id: \"mainDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mt-5 mb-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"Unify\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 mb-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"login_username else placeholder text\",\n      className: \"form-control\",\n      value: this.state.user1,\n      onChange: this.handleUser1Change,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Enter another username\",\n      className: \"form-control\",\n      value: this.state.user2,\n      onChange: this.handleUser2Change,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-primary btn-lg btn-block\",\n      onClick: this.getSongs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }\n    }, \"Compare data\")))), renderTable(), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faComments,\n      className: \"fa-3x sticky-chat\",\n      onClick: this.setChatState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    })), renderChat());\n  }\n\n}","map":{"version":3,"sources":["/Users/mollywirtz/Documents/Classes/CS 4241 - Webware/FinalProject/final-project/unify/src/Home.js"],"names":["React","Button","Form","FormGroup","Input","Container","BootstrapTable","paginationFactory","FontAwesomeIcon","faComments","ChatFeed","Message","Home","Component","constructor","props","state","songs","id","title","columns","showTable","user1","user2","showChat","messages","message","overlay","overlayStyle","overlayDiv","createRef","getSongs","bind","handleUser1Change","handleUser2Change","setChatState","toggleOverlay","e","setState","target","value","staticUser1","staticUser2","dataField","text","render","renderTable","renderChat","color","is_typing","fontSize","chatbubble","borderRadius","padding","display"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Form, FormGroup, Input, Container } from 'reactstrap'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComments } from '@fortawesome/free-solid-svg-icons'\nimport { ChatFeed, Message } from 'react-chat-ui'\n\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            // columns: [{ dataField: 'title', text: 'Songs in Common'}],\n            songs: [{ id: 0, title: \"song0\" }, { id: 1, title: \"song1\" }, { id: 2, title: \"song2\" }, { id: 3, title: \"song3\" }, { id: 4, title: \"song4\" }, { id: 5, title: \"song5\" }, { id: 6, title: \"song6\" }, { id: 7, title: \"song7\" }, { id: 8, title: \"song8\" }, { id: 9, title: \"song9\" }, { id: 10, title: \"song10\" }, { id: 11, title: \"song11\" }, { id: 12, title: \"song12\" }, { id: 13, title: \"song13\"}],\n            columns: [],\n            //songs: [],\n            showTable: false,\n            user1: \"\", \n            user2: \"\",\n            showChat: false,\n            messages: [\n                new Message({\n                  id: 1,\n                  message: \"I'm the recipient! (The person you're talking to)\",\n                }), // Gray bubble\n                new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }), // Blue bubble\n              ],\n            overlay: false,\n            overlayStyle: \"none\"\n        }\n\n        this.overlayDiv = React.createRef()\n\n        this.getSongs = this.getSongs.bind(this)\n        this.handleUser1Change = this.handleUser1Change.bind(this)\n        this.handleUser2Change = this.handleUser2Change.bind(this)\n        this.setChatState = this.setChatState.bind(this)\n        this.toggleOverlay = this.toggleOverlay.bind(this)\n    }\n\n    // Get form value on change\n    handleUser1Change (e) { this.setState({ user1: e.target.value }) }\n    handleUser2Change (e) { this.setState({ user2: e.target.value }) }\n\n    // Send request to server for songs in common\n    getSongs() {\n        // FOR WHEN SERVER IS SET UP\n        // let bodyJson = [{user1: this.state.user1}, {user2: this.state.user2}]\n        // fetch('/DUMMY_PATH_TO_GET_SONGS', {\n        //     method: 'POST',\n        //     body: JSON.stringify(bodyJson),\n        //     headers: {\n        //         \"Content-Type\": \"application/json\"\n        //     }\n        // }).then(response => response.json())\n        // .then(json => {\n        //     console.log(\"SONGS FROM SERVER: \" + json)\n        //     let staticUser1 = this.state.user1\n        //     let staticUser2 = this.state.user2\n        //     this.setState({\n        //         songs: json,\n        //         columns: [{ dataField: 'title', text: `Songs in Common Between ${staticUser1} and ${staticUser2}`}],\n        //         showTable: true,\n        //         user1: \"\",\n        //         user2: \"\"\n        //     })\n        // }) \n\n        // TEMP FOR FRONT END TESTING\n        let staticUser1 = this.state.user1\n        let staticUser2 = this.state.user2\n        this.setState({ \n            showTable: true,\n            columns: [{ dataField: 'title', text: `Songs in Common Between ${staticUser1} and ${staticUser2}`}],\n            user1: \"\",\n            user2: \"\"\n        })\n        \n    }\n\n    setChatState() {\n        this.setState({\n            showChat: true\n        })\n    }\n\n    toggleOverlay() {\n\n        if (this.state.overlayStyle === \"block\") {\n            this.setState({ \n                overlayStyle: \"none\",\n                showChat: false \n            })\n        }\n    }\n\n\n    render () {\n        // Show table on recieving data from server\n        const renderTable = () => {\n            if (this.state.showTable) {\n                return (                \n                <div className=\"mt-5 mb-10\">\n                    <BootstrapTable keyField='id' data={ this.state.songs } columns={ this.state.columns } pagination={ paginationFactory() } bootstrap4={true} />\n                </div>\n                )\n            }\n        }\n\n        const renderChat = () => {\n            if (this.state.showChat) {\n                if (this.state.overlayStyle !== \"block\") {\n                    this.setState({ overlayStyle: \"block\" })\n                }\n\n                return (\n                    <div>\n                        <Container id=\"chatDiv\">\n                            <h1 style={{color: \"#ffffff\"}} className=\"mt-5 mb-10\">Chat</h1>\n                                <ChatFeed\n                                messages={this.state.messages} // Array: list of message objects\n                                isTyping={this.state.is_typing} // Boolean: is the recipient typing\n                                hasInputField={false} // Boolean: use our input, or use your own\n                                showSenderName // show the name of the user who sent the message\n                                bubblesCentered={false} //Boolean should the bubbles be centered in the feed?\n                                bubbleStyles={\n                                {\n                                    text: {\n                                        fontSize: 16\n                                    },\n                                    chatbubble: {\n                                        borderRadius: 70,\n                                        padding: 10\n                                    }\n                                    }\n                                }\n                                />\n                        </Container>\n\n                        <div id=\"writeMsgDiv\">\n                            <div>\n                                <Input type=\"text\" placeholder=\"Type a message\"></Input>\n                            </div>\n                            <Button className=\"btn btn-primary\">Send</Button>\n                        </div>\n                        \n                    </div>\n                    )\n            }\n        }\n \n\n        return (\n            <div id=\"wrapperDiv\">\n                <div id=\"overlay\" onClick={this.toggleOverlay} ref=\"overlayDiv\" style={{display: this.state.overlayStyle}}></div>\n                <Container id=\"mainDiv\" >\n\n                    <h1 className=\"mt-5 mb-10\">Unify</h1>\n\n                    <div className=\"mt-5 mb-10\">\n                        <Form>\n                            <FormGroup>\n                                <Input type=\"text\" placeholder=\"login_username else placeholder text\" className=\"form-control\" value={this.state.user1} onChange={this.handleUser1Change} required></Input>\n                            </FormGroup>                    \n                            <FormGroup>\n                                <Input type=\"text\" placeholder=\"Enter another username\" className=\"form-control\"  value={this.state.user2} onChange={this.handleUser2Change}  required></Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Button className=\"btn btn-primary btn-lg btn-block\" onClick={this.getSongs}>Compare data</Button>\n                            </FormGroup>\n                        </Form>\n                    </div>\n\n                    { renderTable() }\n\n                    <FontAwesomeIcon icon={faComments} className=\"fa-3x sticky-chat\" onClick={this.setChatState} />\n\n                </Container>\n\n                { renderChat() }\n\n                \n            </div>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}